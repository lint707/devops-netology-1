package main

import (
	"testing"
)

type gameCase struct {
	step    int
	command string
	answer  string
}

var game0cases = [][]gameCase{
	// этот блок на основной флоу программы
	{
		{100, "осмотреться", "ты находишься на кухне, на столе: чай, надо собрать рюкзак и идти в универ. можно пройти - коридор"}, // действие осмотреться
		{200, "идти коридор", "ничего интересного. можно пройти - комната, кухня, улица"},                                          // действие идти
		{300, "идти комната", "ты в своей комнате. можно пройти - коридор"},
		{400, "осмотреться", "на столе: ключи, конспекты, на стуле: рюкзак. можно пройти - коридор"},
		{500, "надеть рюкзак", "вы надели: рюкзак"},                 // действие надеть
		{600, "взять ключи", "предмет добавлен в инвентарь: ключи"}, // действие взять
		{700, "взять конспекты", "предмет добавлен в инвентарь: конспекты"},
		{800, "идти коридор", "ничего интересного. можно пройти - комната, кухня, улица"},
		{900, "применить ключи дверь", "дверь открыта"}, // действие применить
		{1100, "идти улица", "на улице весна. можно пройти - коридор"},
	},

	// этот блок на всякие граничные случаи, которые вы должны уметь обрабатывать. именно за счет него вам не получится все жестко захардкодить
	{
		{100, "осмотреться", "ты находишься на кухне, на столе: чай, надо собрать рюкзак и идти в универ. можно пройти - коридор"},
		{200, "завтракать", "неизвестная команда завтракать"}, // придёт топать в универ голодным :(
		{300, "идти комната", "нет пути в комната"},           // через стены ходить нельзя
		{400, "идти коридор", "ничего интересного. можно пройти - комната, кухня, улица"},
		{500, "применить ключи дверь", "нет предмета в инвентаре - ключи"},
		{600, "идти комната", "ты в своей комнате. можно пройти - коридор"},
		{700, "осмотреться", "на столе: ключи, конспекты, на стуле: рюкзак. можно пройти - коридор"},
		{800, "взять ключи", "некуда класть"}, // надо взять рюкзак сначала
		{900, "надеть рюкзак", "вы надели: рюкзак"},
		{1000, "осмотреться", "на столе: ключи, конспекты. можно пройти - коридор"}, // состояние изменилось

		// эти тест-кейсы для того чтобы проверить что у вас корректно реализовано хранение комнаты и нет дублирования по-значению
		{1001, "идти коридор", "ничего интересного. можно пройти - комната, кухня, улица"},
		{1002, "идти комната", "ты в своей комнате. можно пройти - коридор"},
		{1003, "осмотреться", "на столе: ключи, конспекты. можно пройти - коридор"},

		{1100, "взять ключи", "предмет добавлен в инвентарь: ключи"},
		{1200, "взять телефон", "нет такого"},                                // неизвестный предмет
		{1300, "взять ключи", "нет такого"},                                  // предмента уже нет в комнате - мы его взяли
		{1400, "осмотреться", "на столе: конспекты. можно пройти - коридор"}, // состояние изменилось
		{1500, "взять конспекты", "предмет добавлен в инвентарь: конспекты"},
		{1600, "осмотреться", "пустая комната. можно пройти - коридор"}, // состояние изменилось
		{1700, "идти коридор", "ничего интересного. можно пройти - комната, кухня, улица"},
		{1800, "идти кухня", "кухня, ничего интересного. можно пройти - коридор"},
		{1900, "осмотреться", "ты находишься на кухне, на столе: чай, надо идти в универ. можно пройти - коридор"}, // состояние изменилось
		{2000, "идти коридор", "ничего интересного. можно пройти - комната, кухня, улица"},
		{2100, "идти улица", "дверь закрыта"},                                  //условие не удовлетворено
		{2200, "применить ключи дверь", "дверь открыта"},                       //состояние изменилось
		{2300, "применить телефон шкаф", "нет предмета в инвентаре - телефон"}, // нет предмета
		{2400, "применить ключи шкаф", "не к чему применить"},                  // предмет есть, но применить его к этому нельзя
		{2500, "идти улица", "на улице весна. можно пройти - коридор"},

		// тут у вас будет может быть паника из-за выхода за границы слайса
		// panic: runtime error: index out of range [1] with length 1 [recovered]
		// надо написать так чтобы паника не возникала - добавить проверку на колчиество аргументов
		{2600, "применить", "требуется больше аргументов"},
		{2700, "идти", "требуется больше аргументов"},
	},
}

func TestGame0(t *testing.T) {
	for caseNum, commands := range game0cases {
		initGame() // сбрасываем состояние игры
		for _, item := range commands {
			answer := handleCommand(item.command) // внутри handleCommand отрабатывает ваш код
			if answer != item.answer {
				t.Error("case:", caseNum, item.step,
					"\n\tcmd:", item.command,
					"\n\tresult:  ", answer,
					"\n\texpected:", item.answer)
			}
		}
	}
}
